include config.ninja

@SUBNINJAS@

# KERNEL ASSEMBLY
build src/kernel/isr_wrapper.o: asm src/kernel/isr_wrapper.asm
build src/kernel/gdt.o: asm src/kernel/gdt.asm

# KERNEL MAIN
build src/kernel/main.o: rustc src/kernel/main.rs |  src/drivers/io/console/mod.rs src/drivers/io/console/arch/x86_64/mod.rs src/kernel/memory/mod.rs src/kernel/memory/arch/x86_64/mod.rs src/kernel/error.rs src/kernel/arch/x86_64/mod.rs src/kernel/arch/x86_64/reset.rs src/kernel/support.rs src/kernel/main.rs

# KERNEL BINARY
build kernel.bin: ld src/boot/arch/@ARCH@/setup.o $
                     src/kernel/main.o $
                     src/kernel/isr_wrapper.o $
                     src/kernel/gdt.o $
                     "-(" /usr/local/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-c5ed6fb4-0.11.0-pre.rlib "-)" $
                     "-(" /usr/local/lib/rustlib/x86_64-unknown-linux-gnu/lib/librlibc-d1ece24e-0.11.0-pre.rlib "-)"

build "-(" "-)": phony

# COMMANDS
build run: qemu kRnel.iso

# KERNEL ISO GENERATION
build isofiles/boot/grub/grub.cfg: cp thirdparty/grub/grub.cfg | isofiles/boot/grub
build isofiles/boot/kernel.bin: cp kernel.bin | isofiles/boot
build isofiles/boot/grub/stage2: touch
build kRnel.iso: genrescue isofiles | isofiles/boot/grub/grub.cfg $
                                      isofiles/boot/kernel.bin $
                                      isofiles/boot/grub/stage2

default kRnel.iso
